装饰者模式:
    动态地将责任附加到对象上。若要扩展功能,装饰者提供了比继承更有弹性的替代方案
深入分析:
    1.装饰者模式中使用到了继承,但是使用继承不是利用继承获取父类行为,而是利用继承达到类型匹配
    2.装饰者模式中装饰者的类型反应了被装饰者的类型,即:装饰者和被装饰者是同一个类型
    3.任何可以原始对象的地方，都可以用装饰过的对象代替原始对象
    4.可以用多个装饰者包装一个对象,也可以使用一个装饰者包装多个对象
    5.用一群装饰者对象来包装具体组件
    6.装饰者模式会引入许多小对象,如果过度使用会让系统变得复杂
高级用法:
    结合工厂模式和建造者模式使用更佳