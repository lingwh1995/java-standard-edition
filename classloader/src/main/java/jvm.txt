类加载的三个阶段:
    1.加载:查找并加载类的二进制数据
        详细过程:
            就是将class文件中的二进制数据读取到内存中,将其放在方法区中,然后在堆中创建一个java.lang.Class对象,
            用来封装在方法去的数据结构,类加载的最终产品是位于堆区中的class对象
    2.链接
        验证:保证被加载类的正确性
            如:验证1.7版本的jdk不能加载.1.8版本的class文件
        准备:为类的静态变量分配内存,并将其初始化未默认值
        解析:把类中的符号引用转换为直接引用
    3.初始化:为类的静态变量赋予正确的初始值
Java程序对类的使用方式：
    1.主动使用:会导致类的初始化
    主动使用的分类:
        new,直接使用
        访问某个类或者接口的静态变量,或者对改静态变量进行赋值操作
        调用静态方法
        反射某个类
        初始化一个子类
        启动类,如:java HelloWorld
        除过上述六个以为,其余的都是被动使用,不会导致类的初始化
    2.被动使用:不会导致类的初始化
JVM规范:
    所有的Java虚拟机都必须实现再每个类或者接口被Java程序首次主动使用的时候才初始化他们,当然现代JVM有可能根据
    程序的上下文语意推断出来接下来可能初始化谁。
