1.函数式接口:
    1.如果只有一个接口只有一个抽象方法,那么该接口就是一个函数式接口
    2.如果接口声明了@FunctionalInterface注解,那么编译器就会按照函数式接口的定义来要求该接口
    3.如果某个接口只有一个抽象方法,但是我们并没有给该接口声明@FunctionalInterface注解,那么编译器依旧会将该接口认为成函数式接口
2.高阶函数:
    如果一个函数接收一个函数做为参数,或者返回要给函数作为返回值,那么该函数就叫做高阶函数
3.Function和BiFunction
    Function<T,R>:接收一个T类型参数,返回一个R类型参数
    BiFunction<T,U,R>:BidirecationalFunction,接收一个T类型参数和U类型参数,返回一个R类型参数
4.如何执行Function接口的方法
    functioninterface.apply(T t);
5.函数式编程的本质以及特点:
    本质:传递行为而不是传递值
    特点:write less,do more!
6.lambda表达式和函数式编程的关系:
    具体的lambda表达式就是函数式接口中抽象方法的实现
8.函数式编程和面向对象编程的区别:
    这种面向函数编程的方式比面向对象对象编程的方式抽象度更高,将函数视为一等公民


