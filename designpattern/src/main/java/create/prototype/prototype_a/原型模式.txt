原型模式:prototype
	通过new产生一个对象需要非常繁琐的数据准备或者访问权限，则可以使用原型模式
	就是java中的克隆技术，以某个对象为原型，赋值出新的对象，新的对象具备原型对象的特点
	优势:效率高(直接克隆，避免了重新执行构造函数的步骤)
	克隆类似于new，但是不同于new，new创建的对象属性采用的是默认值，克隆出的对象的属性和原型对象
		完全相同，并且克隆出的对象不会影响原型对象
	应用场景:一个非常复杂的的excel对象需要通过new重新创建，就可以通过clone来快速创建
原型模式实现:
	-Cloneable接口和clone方法
	-Prototype模式中实现起来最困难就是内存复制操作，但是java中提供了clone()方法为我们做了绝大部分的事情
优点:1.简化复杂对象的创建过程
    2.不用重新创建对象，而是动态的获取对象运行时的状态
    3.如果原型对象发了变化，对应的副本对象会随之发生变化，不用修改获取副本对象的代码
缺点:1.在实现深克隆的时候可能需要较为复杂的代码
    2.需要为每一个类配备一个克隆方法，这对全新的类来说不是很困难，但是对已有的进行改造的时候，
    需要修改已有类的源代码，会违反OCP原则

	