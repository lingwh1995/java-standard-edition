建造者模式:
    返回一个组装好的完整产品
    客户端可以不直接调用建造者的相关方法，而是通过指挥者类来指导如何生成对象，包括对象
    的组装过程和建造步骤，侧重于一步步构造一个复杂对象，返回一个完整的对象 。如果将抽
    象工厂模式看成汽车配件生产工厂，生产一个产品族的产品，那么建造者模式就是一个汽车
    组装工厂，通过对部件的组装可以返回一辆完整的汽车

    与工厂模式的区别是：建造者模式更加关注与零件装配的顺序，一般用来创建更为复杂的对象
    建造者模式构建复杂POJO应用场景:
        1.构造器中需要传入大量参数时可以使用
        2.构造器中传入的参数需要带有一定的约束规则时可以使用
    用同一套算法，构建出表现上完全不同的对象

抽象工厂模式:
    返回一系列相关的产品，这些产品位于不同的产品等级结构，构成了一个产品族
    在抽象工厂模式中，客户端实例化工厂类，然后调用工厂方法获取所需产品对象，

    构建器模式的本质:分离整体构建算法和部件构造
    生成器模式和工厂方法模式
        这两个模式可以组合使用。
        生成器模式的Builder实现中，通常需要选择具体的部件实现，一个可行的方案就是实现成为工厂方法，通过工厂方法来获取具体的部件对象，然后再进行部件的装配。



